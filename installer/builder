#!/bin/bash

# terminal colors
RED="\033[31m"
GRN="\033[32m"
CLR="\e[0m"

echo "
Built for 64-bit Raspberry Pi OS...

  `$GRN`  ;d0KOd.  .oOK0x:  
        0xlllcoxolkolllloX 
          ;OccloddKNdxdocckc 
          .dkddkWNNMOdoxd,  
          .o:,x0....xd,ck'  `$CLR`
  `$RED`  K:xOoloOOccloocW  
        .x;N:....xO....'K;k,
        O..Nc...:XNl...:X.,X
        .kkx0NXk'...dNNxldK'
          'k...0o....,O...d: 
          ;o;'oM0olkWc.;oc  
            .cOx....dOl.    
                .x00k.  `$CLR`

GNU/Linux aarch64 5.10.92-v8+

"
# -------------- Defs --------------#

TZ="America/Detroit"
KBMODEL="pc101"
KBLAYOUT="us"
KBOPTIONS="lv3:ralt_alt"
DEF_USER="pi"
PASSWD="campbell"
HOSTNAME="raspinet"
CONFIG=/boot/config.txt # main config file


sleep 3
echo "Note: After configuration is complete, bluetooth and wifi will be disabled

System will auto-reboot at completion...
"
sleep 3
#--- Ensure this is being run as root ---#
if [[ $EUID > 0 ]]
        then echo "Please run this script as root, exiting..."
        sleep 1
        exit
fi

echo "Getting system info..."
#--- Display some system info --#
cat /proc/cpuinfo

echo ""
sleep 1

################################# enable ssh ###################################
# --- check is SSH is enabled, if not, install it. 
echo "Changing configs..."
echo ""
sleep 1
if service ssh status | grep -q inactive; then
    echo "Enabling SSH..."
    ssh-keygen -A &&
    update-rc.d ssh enable &&
    invoke-rc.d ssh start 
else
    echo "SSH is already enabled... Moving on"
fi
echo ""
sleep 1
######################### Disable Wi-Fi and bluetooth #########################
# disable transmisson capability (persists after reboot, reverse with unblock command)
sudo rfkill block wifi && sudo rfkill block bluetooth # disable wifi and disable bluetooth

############################# update and ugrade ################################
#  may disable when stable version is complete
sudo apt-get -y update && sudo apt-get -y upgrade
sudo apt-get -y dist-upgrade 
sudo apt-get insatll raspi-config 

########################### install dependencies ################################
# basic installs
echo "Installing basic packages..."
echo ""
sleep 1
sudo apt-get install -y whiptail # menu tool
sudo apt-get install -y figlet # pretty display in CLI
sudo apt-get install -y nmap # scanning the network
sudo apt-get install -y ndiff # comparing scans
# --- Nodejs for web server --#
sudo curl -fsSL https://deb.nodesource.com/setup_17.x | bash -
sudo apt-get install -y nodejs

# python scripts
#---- For Parsing ----#
sudo pip install argparse
sudo pip install python-libnmap
sleep 1

# more complicated installs

############################## configurations #####################################
#------ Locale -------#
echo "Updating locale..."
sudo perl -pi -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen
sleep 1
echo ""
echo "Changing timezone..."
sudo rm /etc/localtime
sudo ln -s /usr/share/zoneinfo/$TZ /etc/localtime
sudo rm /etc/timezone
echo $TZ > /etc/timezone
sudo timedatectl
echo "Timezone updated..."
sleep 1
echo "Changing keyboard to US"
sudo sed -i 's/XKBMODEL=\"\w*"/XKBMODEL=\"'$KBMODEL'\"/g' /etc/default/keyboard
sudo sed -i 's/XKBLAYOUT=\"\w*"/XKLAYOUT=\"'$KBLAYOUT'\"/g' /etc/default/keyboard
sudo sed -i 's/XKBOPTIONS=\"\w*"/XKBOPTIONS=\"'$KBMODEL'\"/g' /etc/default/keyboard
echo "locale updates complete..."
echo ""
sleep 1
echo "Changing Wi-Fi Country to US..."
sleep 1
echo ""
echo "Changing hostname..."
echo ""
sed -i 's/raspberrypi/'$HOSTNAME'/g' /etc/hostname
sed -i 's/127.0.0.1\traspberrypi/127.0.0.1\t'$HOSTNAME'/g' /etc/hosts
echo "Hostname changed to $HOSTNAME"
sleep 1
echo ""
echo "Diabling screen blanking..."
sudo mkdir -p /etc/X11/xorg.conf.d/
sudo cp /usr/share/raspi-config/10-blanking.conf /etc/X11/xorg.conf.d/
printf "\\033[9;0]" >> /etc/issue
sleep 1
echo ""
echo "Changing password..."
echo "$DEF_USER:$PASSWD" | chpasswd
echo ""
sleep 1
echo "Password successfully changed..."
echo ""
sleep 1
############################## Link files #####################################
# symlinks #TODO symlinks need to be added

############################## Clean up dirs ##################################
# remove unecessary stuff #TODO fix this with if statement 
# TODO check behavior for if files do not exist
echo "Building Rapinet environment..."
sleep 1
echo ""
sudo rm -rf Bookshelf/
sudo rm -rf Documents/
sudo rm -rf Downloads/
sudo rm -rf Music/
sudo rm -rf Pictures/
sudo rm -rf Public/
sudo rm -rf Templates/
sudo rm -rf Videos/
echo " Cleaned out some junk..."
sleep 1
echo ""
############################## Add dirs ##################################
# make sure we are in the right dir #TODO combine and simplfy
echo "Adding some directories..."
sudo mkdir -p raspinet/bin && 
sudo mkdir raspinet/discovery &&
sudo mkdir raspinet/discovery/hosts && 
sudo mkdir raspinet/discovery/ports &&
sudo mkdir raspinet/discovery/services
sudo chmod 777 raspinet &&
sudo chmod 777 raspinet/bin &&
sudo chmod 777 raspinet/discovery &&
sudo chmod 777 raspinet/discovery/hosts &&
sudo chmod 777 raspinet/discovery/ports &&
sudo chmod 777 raspinet/discovery/services
echo ""
sleep 1
echo "Getting some scripts..."
# bin folder
sudo wget https://raw.githubusercontent.com/GaryDeco/Raspinet/main/raspinet/bin/filemanager
sleep 1
sudo wget https://raw.githubusercontent.com/GaryDeco/Raspinet/main/raspinet/bin/linker
sleep 1
sudo wget https://raw.githubusercontent.com/GaryDeco/Raspinet/main/raspinet/bin/piscan.sh
sleep 1
echo ""
echo "Raspinet scripts installed..."
sleep 1
echo ""
echo "Relocating files..."
sleep 1
echo ""
# move files and give permissions
sudo mv filemanager raspinet/bin/
sudo chmod 777 raspinet/bin/filemanager
sudo mv linker raspinet/bin/
sudo chmod 777 raspinet/bin/linker
sudo mv piscan.sh raspinet/bin/
sudo chmod 777 raspinet/bin/piscan.sh
sleep 1
echo "Files relocated..."
echo ""
sleep 1
# discovery folder

#TODO Add scripts

echo "Done"
sleep 1
echo ""
############################### End of Config ##################################
# final house keeping
echo "Covering tracks..."
sudo rm builder
sleep 1
echo ""
echo "Done"
# reboot the system
echo ""
sleep 1
echo "Installation complete..."
echo ""
sleep 1
echo "Rebooting..."
echo ""
sleep 1
echo "Enjoy..."
sleep 1
sudo reboot
