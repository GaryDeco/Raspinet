#!/bin/bash

###########################################################################################
# Author: Gary Decosmo
# Date created: 2/19/2022
# Updated: 3/10/2022
# Description: Install script for raspinet scanner
# run this script on a fresh install of a raspbian OS to build the scanner enviornment. 

# This script is run with the following commands in the Rpi terminal
# --- Switch to superuser --- #
#$ sudo su
# --- Fetch the build script --- #
#$ wget --no-check-certificate --content-disposition https://raw.githubusercontent.com/GaryDeco/Raspinet/main/installer/raspios_buster_armhf
# --- Run the build script --- #
# sudo bash raspios_buster_armhf

# Please add an issue if you encounter a bug
###########################################################################################
GITURL="https://raw.githubusercontent.com/GaryDeco/Raspinet/main"
sudo chmod 777 /etc/rc.local

################################# SSH ###################################
# --- check is SSH is enabled, if not, install it. 
if service ssh status | grep -q inactive; then
    ssh-keygen -A &&
    update-rc.d ssh enable &&
    invoke-rc.d ssh start 
    spacer 1
    # -------------------------------------------#
    # added to enable root ssh login (3/12/2022)
    #TODO tranfer all fixes to another file
    echo $ROOTSSH >> /etc/ssh/sshd_config
    spacer
    sudo service ssh restart 
fi

######################### Disable Wi-Fi and bluetooth #########################
# disable transmisson capability (persists after reboot, reverse with unblock command)
sudo rfkill block wifi && sudo rfkill block bluetooth # disable wifi and disable bluetooth

############################# update and ugrade ################################
#  may disable when stable version is complete
sudo apt-get -y update && sudo apt-get -y upgrade
sudo apt-get -y dist-upgrade 
sudo apt-get insatll raspi-config 

########################### install dependencies ################################
# basic installs

################################# OS TOOLS #####################################
sudo apt-get install -y whiptail # menu tool
sudo apt-get install -y figlet # pretty display in CLI
sudo apt-get install -y rrdtool # for sampling temperature
sudo apt-get install -y git # ensure git is installed
sudo apt-get install -y curl wget lynx w3m gnupg2 # ensure wget and curl are up to date and add lynx + w3m

# --- Nodejs for web server --- #
sudo curl -fsSL https://deb.nodesource.com/setup_17.x | bash -
sudo apt-get install -y nodejs
#sudo npm install express
#sudo npm install -g nodemon

# --- python tools --- #
sudo pip install argparse
sudo pip install python-libnmap
sudo apt-get install -y python3-pandas
############################### NETWORK TOOLS ####################################

sudo apt-get install -y nmap # scanning the network
sudo apt-get install -y ndiff # comparing scans
sudo apt-get install -y xsltproc # convert xml to html {added 4/1/2022}
sudo apt-get install -y arp-scan
#sudo apt-get install -y network-manager # {added 4/2/2022}
sudo apt-get install -y pishrink # .img file handling
sudo apt-get install -y gparted # partition handling and resizing

############################## configurations #####################################
#------ Locale -------#
sudo perl -pi -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen
sudo rm /etc/localtime
sudo ln -s /usr/share/zoneinfo/$TZ /etc/localtime
sudo rm /etc/timezone
echo $TZ > /etc/timezone
sudo timedatectl
sudo sed -i 's/XKBMODEL=\"\w*"/XKBMODEL=\"'$KBMODEL'\"/g' /etc/default/keyboard
sudo sed -i 's/XKBLAYOUT=\"\w*"/XKLAYOUT=\"'$KBLAYOUT'\"/g' /etc/default/keyboard
sudo sed -i 's/XKBOPTIONS=\"\w*"/XKBOPTIONS=\"'$KBMODEL'\"/g' /etc/default/keyboard

#TODO complete this config
echo $HOSTNAME > /etc/hostname
#---------------------------------------------------------------#
# hostname was not properly updated to /etc/hosts (3/12/2022)
TODO add this with other fixes to a seperate file
fix_hostname(){
cat << EOF
127.0.0.1     localhost
::1           localhost ip6-localhost ip6-loopback
ff02::1       ip6-allnodes
ff02::2       ip6-allrouters

127.0.1.1     $HOSTNAME
EOF
}
fix_hostname > /etc/hosts
#--------------------------------------------------------------#
sudo mkdir -p /etc/X11/xorg.conf.d/
sudo cp /usr/share/raspi-config/10-blanking.conf /etc/X11/xorg.conf.d/
printf "\\033[9;0]" >> /etc/issue
############################## rc.local ##################################
# modify as needed
# this adds the wake LED functionality
function update_rc.local(){
cat << EOF
#!/bin/sh -e
# rc.local

# Print the IP address
_IP=192.168.68.74  || true
if [ "" ]; then
  printf "My IP address is %s\n" ""
fi
# Adds wake LED on boot
echo "18" >/sys/class/gpio/export
echo "out" >/sys/class/gpio/gpio18/direction
echo "1" >/sys/class/gpio/gpio18/value
exit 0
EOF
}
# write new rc.local 
sudo chmod 777 /etc/rc.local
update_rc.local > /etc/rc.local
sleep 1
#reduce permissions
sudo chmod 755 /etc/rc.local
############################## configure node.js ##################################
sudo mkdir /home/dev/nodejs
sudo chmod 777 /home/dev/nodejs
cd /home/dev/nodejs
sudo mkdir public # contains html rendered in webapp
sudo mkdir views # contains javascript and css tagged in index.html
sudo touch index.js # main entry point of app
cd public # navigate into public dir
sudo touch index.html # create index.html (if it does not exist)
cd .. # back out to WebApp dir
cd views # go into views dir
sudo mkdir css # create css dir
msudo kdir js # create js dir
cd .. # back to WebApp dir

############################## update cron ##################################
#helper to cut down on code size
function getmv_file(){
wget --no-check-certificate --content-disposition https://raw.githubusercontent.com/GaryDeco/Raspinet/main/raspinet/$1 
sudo mv $1 /home/dev/raspinet
sudo chmod 777 /home/dev/raspinet/$1
}
#### Add gpio file ####
getmv_file "ethled.sh"
#### add the other files ####
getmv_file "config_tool.sh" 
getmv_file "filemanager.sh"
getmv_file "get_netinfo.sh"
getmv_file "nic_info.sh"
getmv_file "piscan.sh"
getmv_file "update_arp_cache.sh"
#### Jobs ####
JOB1="*/1 * * * * sudo /usr/bin/bash /home/dev/raspinet/ethled.sh &"

echo "adding cronjob"
crontab -l | { cat; echo "$JOB1"; } | crontab -
echo "cronjob added"
sleep 1
echo "restarting service"
sudo service cron start
echo "service restarted"

############################## Link files #####################################
# symlinks #TODO symlinks need to be added

############################## Clean up dirs ##################################

############################## ADDING DIRECTORIES ##################################

############################# SCRIPT INSTALLS ####################################

######################### FILE RELOCATION AND PERMISSIONS #######################

############################### End of Config ##################################
# final house keeping
sudo rm raspios_buster_armhf
# Fix for installer icon
# function fix_icon(){
# sudo chmod 777 /home/dev/Desktop/installer.desktop
# cat << EOF
# [Desktop Entry]
# Name=Installer 
# Comment=RasPiNet Installer Script
# Icon=/home/dev/raspinet/installer/install_icon.png
# Exec=lxterminal -t "RasPiNet Auto-Installer GUI" -e bash /home/dev/raspinet/installer/rpinet_install.sh
# Type=Application
# Encoding=UTF-8
# Terminal=false
# StartupNotify=false
# Categories=None;
# EOF
# }
# fix_icon > /home/dev/Desktop/installer.desktop
# sleep 1
#--------------------------------------------------------------#

sudo curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall
sudo chmod +x msfinstall
sudo bash msfinstall
sudo mv msfinstall /home/dev/raspinet/installer/ 



# ------------- Adding RPi wake button script from my arcade project -------------- #
git clone https://github.com/GaryDeco/RetroPie-Power-Switch.git
cd RetroPie-Power-Switch/script/
bash install > /dev/null 2>&1
echo
cd /home/dev/raspinet
sudo rm -rf /home/dev/RetroPie-Power-Switch/
#--------------------------------------------------------------#
clear
if whiptail --title "RasPiNet Installer" --yesno "Install complete, Do you want to reboot now?" 10 40; then
    dispMsg "RasPiNet Installer" "Rebooting..."
    sudo reboot now
else
    dispMsg "RasPiNet Installer" "Exiting..."
    exit
fi
############################### More To-Do's ##################################
#TODO Organize with some functions
#TODO Use flags for better management
#TODO define requirements and dependencies in a seperate file?
#TODO Add LED scripts and GPIO management
